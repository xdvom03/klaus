(defun blind-check (url class)
  (let* ((corp (downloaded-url-corpus url))
         (sibling-classes (subclasses (parent-class class))))
    (multiple-value-bind (scores probsum) (scores (list-keys corp)
                                                  sibling-classes
                                                  (map-to-hash #'(lambda (option)
                                                                   (if (equal option class)
                                                                       (add-corpuses (get-recursive-corpus option)
                                                                                     (scale-corpus corp -1))
                                                                       (get-recursive-corpus option)))
                                                               sibling-classes)
                                                  (map-to-hash #'(lambda (option)
                                                                   (if (equal option class)
                                                                       (- (get-word-count option)
                                                                          (length (list-keys (downloaded-url-corpus url))))
                                                                       (get-word-count option)))
                                                               sibling-classes)
                                                  nil)
      (if (and (subclasses class)
               (< probsum (ln 1/10)))
          (print (concat "Cannot sensibly class url: " url " within class: " (parent-class class) ". Probsum: " (exp probsum))))
      (gethash class scores))))

(defun integrity (class)
  (let ((urls (class-urls class t)))
    (/ (apply #'+ (mapcar #'(lambda (url)
                              (blind-check url class))
                          urls))
       (length urls))))

(defun integrity-benchmark (class)
  (dolist (i (subclasses class))
    (integrity-benchmark i))
  (print (concat "Integrity of " class ": " (integrity class))))
