(defun redownload ()
  (ltk:with-ltk ()
    (let* ((pb (progress-bar 0 0 ltk:*tk*))
           (total-files (get-file-count "/"))
           (counter 0))
      (ltk:wm-title ltk:*tk* "Verifying files...")
      (labels ((redownload-class (class)
                 (ensure-directories-exist *files-folder*)
                 (if (not (directory *aliases-file*))
                     (overwrite-file *aliases-file* nil))
                 (dolist (file (remove-if #'manual?
                                          (class-urls class)))
                   (handler-case (redownload-url file)
                     (error (err-text)
                       (print ":(")
                       (print file)
                       (if (choice-box (concat "While downloading " file ", error " (write-to-string err-text) " occurred. Remove URL from system? If no, file will be skipped and this error may reappear.") "Error getting site data")
                           (remove-url file (location file)))))
                   (setf (ltk-mw:percent pb)
                         (* 100 (/ (incf counter)
                                   total-files))))
                 (dolist (subclass (subclasses class))
                   (redownload-class subclass))))
        (redownload-class "/")
        (ltk:destroy ltk:*tk*)))))

(defun redownload-url (url)
  (if (not (file-alias url))
      (multiple-value-bind (html response-origin)
          (html url)
        (let* ((text (extract-text html))
               (new-alias (add-alias url)))
          (overwrite-file (concat *loc-folder* new-alias) response-origin)
          (overwrite-file (concat *html-folder* new-alias) html)
          (overwrite-file (concat *text-folder* new-alias) text))))
  (file-alias url))
