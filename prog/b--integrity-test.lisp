(defun blind-check (url folder)
  (let* ((corp (downloaded-link-corpus url))
         (sibling-folders (subfolders (parent-folder folder))))
    (multiple-value-bind (scores probsum) (scores (list-keys corp)
                                                  sibling-folders
                                                  (map-to-hash #'(lambda (option)
                                                                   (if (equal (simplified-path option)
                                                                              (simplified-path folder))
                                                                       (add-hashtable-corpuses (get-recursive-corpus option)
                                                                                               (scale-corpus corp -1))
                                                                       (get-recursive-corpus option)))
                                                               sibling-folders)
                                                  (map-to-hash #'(lambda (option)
                                                                   (if (equal (simplified-path option)
                                                                              (simplified-path folder))
                                                                       (- (get-word-count option)
                                                                          (length (list-keys (downloaded-link-corpus url))))
                                                                       (get-word-count option)))
                                                               sibling-folders))
      (if (and (subfolders folder)
               (< probsum (ln 1/10)))
          (print (concat "Cannot sensibly class link: " url " within folder: " (parent-folder folder) ". Probsum: " (exp probsum))))
      (gethash (simplified-path folder) (map-to-hash #'cdr
                                                     (list-hashes scores)
                                                     :key-fun (compose #'simplified-path #'car))))))

(defun integrity (folder)
  (let ((links (recursive-links folder)))
    (/ (apply #'+ (mapcar #'(lambda (link)
                              (blind-check link folder))
                          links))
       (length links))))

(defun integrity-benchmark (folder)
  (dolist (i (subfolders folder))
    (integrity-benchmark i))
  (print (concat "Integrity of " (simplified-path folder) ": " (integrity folder))))

(defun recursive-links (folder)
  (append (class-links folder)
          (apply #'append
                 (mapcar #'recursive-links
                         (subfolders folder)))))
